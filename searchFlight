class searchFlight{  
  HashSet<String> airportSet = new HashSet<>();  
  ArrayList <Flight> flights;  
  void addFlight(ArrayList <Flight> flights){  
    this.flights = flights;  
    for(Flight flight : flights){  
      airportSet. add(flight.origin);  
    }  
    }  
    
// Query flights by origin airport using HashSet for fast lookup  
 public List <Flight> searchByAirport(String airport) {  
    ArrayList <Flight> result = new ArrayList <> ();
    for(Flight flight : flights){
      if (flight.origin.equals(airport) || flight.destination.equals(airport)) {
        result.add(flight);
      }
    }
    return result;
  }

// Query flights within a date range  
public List <Flight> searchByDateRange(String startDate, String endDate) {  
    ArrayList <Flight> result = new ArrayList <> ();
    for (Flight flight : flights) {  
        if (flight.date.compareTo(startDate) >= 0 && flight.date.compareTo(endDate) <= 0) {  
            result.add(flight);  
       }  
    }  
    return result;
}  
// Query flights sorted by lateness  
public List <Flight> searchByLateness() {  
    ArrayList <Flight> sortedFlights = new ArrayList <> (flights);  
    Collections.sort (sortedFlights, new Comparator <Flight> (){
      public int compare (Flight f1, Flight f2) {
        return Integer.compare(f2.getLateness(), f1.getLateness());
      }
    });
    return sortedFlights;
}

void display(){
  searchFlight sf = new searchFlight ();
  sf. searchByAirport ("JFK");
  sf. searchByDateRange ("01/01/2022","01/04/2022")
  sf. searchByLateness();
}

          
